{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/victorgaubin/Documents/GitHub/WeatherApp/components/Home.jsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Font from 'expo-font';\nimport { setConfigurationAsync } from 'expo/build/AR';\nexport default function Home() {\n  var date = new Date().getDate();\n  var m = new Date().getMonth() + 1;\n  var month = m.toString().padStart(2, '0');\n  var year = new Date().getFullYear();\n  var heure = new Date().getHours();\n  var minu = new Date().getMinutes();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      city = _useState2[0],\n      setCity = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      desc = _useState4[0],\n      setDesc = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      temp = _useState6[0],\n      setTemp = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      min = _useState8[0],\n      setMin = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      max = _useState10[0],\n      setMax = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      iconHome = _useState12[0],\n      setIconHome = _useState12[1];\n\n  var ville = \"Toulouse\";\n  var apikey = \"008b40e40732624e015ce068cbf7ac72\";\n  fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\" + ville + \"&appid=\" + apikey + \"&units=metric&lang=fr\").then(function (response) {\n    return response.json();\n  }).then(function (r) {\n    setCity(r.name);\n    setDesc(r.weather[0].description);\n    setTemp(r.main.temp.toFixed(1));\n    setMin(r.main.temp_min.toFixed(1));\n    setMax(r.main.temp_max.toFixed(1));\n    setIconHome(r.weather[0].icon);\n  });\n  var img = \"../assets/\" + iconHome + \".png\";\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    }\n  }, React.createElement(View, {\n    style: stylesHome.containerHeader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    }\n  }, React.createElement(Text, {\n    style: stylesHome.bigTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    }\n  }, \"Victor M\\xE9t\\xE9o\"), React.createElement(Text, {\n    style: stylesHome.time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    }\n  }, \"le \", date, \"/\", month, \"/\", year, \" \\xE0 \", heure, \":\", minu)), React.createElement(View, {\n    style: stylesHome.containerWeather,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    }\n  }, React.createElement(Text, {\n    style: stylesHome.cityTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    }\n  }, city), React.createElement(Image, {\n    source: require(img),\n    style: stylesHome.imgLogo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    }\n  }), React.createElement(Text, {\n    style: stylesHome.bigTitleDegre,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    }\n  }, temp, \"\\xBAC\"), React.createElement(Text, {\n    style: stylesHome.infoWeather,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }, desc)));\n}\nvar stylesHome = StyleSheet.create({\n  containerHeader: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 30\n  },\n  bigTitle: {\n    color: 'white',\n    fontSize: 50,\n    fontFamily: 'Dosis'\n  },\n  time: {\n    color: 'white'\n  },\n  containerWeather: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderColor: 'white',\n    borderWidth: 1,\n    paddingRight: 50,\n    paddingLeft: 50,\n    paddingBottom: 20,\n    paddingTop: 20,\n    marginBottom: 30,\n    borderRadius: 20\n  },\n  imgLogo: {\n    height: 100,\n    width: 100\n  },\n  bigTitleDegre: {\n    color: 'white',\n    textAlign: 'center',\n    marginTop: 10,\n    fontSize: 70,\n    fontFamily: 'Dosis'\n  },\n  cityTitle: {\n    color: 'white',\n    fontSize: 40,\n    marginBottom: 20,\n    fontFamily: 'Dosis'\n  },\n  infoWeather: {\n    color: 'white',\n    marginTop: 5\n  }\n});","map":{"version":3,"sources":["/Users/victorgaubin/Documents/GitHub/WeatherApp/components/Home.jsx"],"names":["React","useState","Font","setConfigurationAsync","Home","date","Date","getDate","m","getMonth","month","toString","padStart","year","getFullYear","heure","getHours","minu","getMinutes","city","setCity","desc","setDesc","temp","setTemp","min","setMin","max","setMax","iconHome","setIconHome","ville","apikey","fetch","then","response","json","r","name","weather","description","main","toFixed","temp_min","temp_max","icon","img","stylesHome","containerHeader","bigTitle","time","containerWeather","cityTitle","require","imgLogo","bigTitleDegre","infoWeather","StyleSheet","create","alignItems","justifyContent","marginBottom","color","fontSize","fontFamily","borderColor","borderWidth","paddingRight","paddingLeft","paddingBottom","paddingTop","borderRadius","height","width","textAlign","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAGA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,qBAAT,QAAsC,eAAtC;AASA,eAAe,SAASC,IAAT,GAAgB;AAE3B,MAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA,MAAIC,CAAC,GAAG,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAAhC;AACA,MAAIC,KAAK,GAAGF,CAAC,CAACG,QAAF,GAAaC,QAAb,CAAsB,CAAtB,EAAwB,GAAxB,CAAZ;AACA,MAAIC,IAAI,GAAG,IAAIP,IAAJ,GAAWQ,WAAX,EAAX;AACA,MAAIC,KAAK,GAAG,IAAIT,IAAJ,GAAWU,QAAX,EAAZ;AACA,MAAIC,IAAI,GAAG,IAAIX,IAAJ,GAAWY,UAAX,EAAX;;AAP2B,kBASHjB,QAAQ,CAAC,EAAD,CATL;AAAA;AAAA,MASpBkB,IAToB;AAAA,MASdC,OATc;;AAAA,mBAUHnB,QAAQ,CAAC,EAAD,CAVL;AAAA;AAAA,MAUpBoB,IAVoB;AAAA,MAUdC,OAVc;;AAAA,mBAWHrB,QAAQ,CAAC,EAAD,CAXL;AAAA;AAAA,MAWpBsB,IAXoB;AAAA,MAWdC,OAXc;;AAAA,mBAYLvB,QAAQ,CAAC,EAAD,CAZH;AAAA;AAAA,MAYpBwB,GAZoB;AAAA,MAYfC,MAZe;;AAAA,mBAaLzB,QAAQ,CAAC,EAAD,CAbH;AAAA;AAAA,MAapB0B,GAboB;AAAA,MAafC,MAbe;;AAAA,oBAcK3B,QAAQ,CAAC,EAAD,CAdb;AAAA;AAAA,MAcpB4B,QAdoB;AAAA,MAcVC,WAdU;;AAiB3B,MAAMC,KAAK,GAAG,UAAd;AACA,MAAMC,MAAM,GAAG,kCAAf;AAEJC,EAAAA,KAAK,wDACoDF,KADpD,eACmEC,MADnE,2BAAL,CAGSE,IAHT,CAGc,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GAHd,EAISF,IAJT,CAIc,UAAAG,CAAC,EAAI;AACRjB,IAAAA,OAAO,CAACiB,CAAC,CAACC,IAAH,CAAP;AACAhB,IAAAA,OAAO,CAACe,CAAC,CAACE,OAAF,CAAU,CAAV,EAAaC,WAAd,CAAP;AACAhB,IAAAA,OAAO,CAACa,CAAC,CAACI,IAAF,CAAOlB,IAAP,CAAYmB,OAAZ,CAAoB,CAApB,CAAD,CAAP;AACAhB,IAAAA,MAAM,CAACW,CAAC,CAACI,IAAF,CAAOE,QAAP,CAAgBD,OAAhB,CAAwB,CAAxB,CAAD,CAAN;AACAd,IAAAA,MAAM,CAACS,CAAC,CAACI,IAAF,CAAOG,QAAP,CAAgBF,OAAhB,CAAwB,CAAxB,CAAD,CAAN;AACAZ,IAAAA,WAAW,CAACO,CAAC,CAACE,OAAF,CAAU,CAAV,EAAaM,IAAd,CAAX;AAEF,GAZT;AAcQ,MAAMC,GAAG,kBAAgBjB,QAAhB,SAAT;AAEJ,SAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkB,UAAU,CAACC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,UAAU,CAACE,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,UAAU,CAACG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAkC7C,IAAlC,OAAyCK,KAAzC,OAAiDG,IAAjD,YAA0DE,KAA1D,OAAkEE,IAAlE,CAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE8B,UAAU,CAACI,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,UAAU,CAACK,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCjC,IAApC,CADJ,EAGI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEkC,OAAO,CAACP,GAAD,CAAtB;AAA6B,IAAA,KAAK,EAAEC,UAAU,CAACO,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAIR,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,UAAU,CAACQ,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwChC,IAAxC,UAJQ,EAKR,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,UAAU,CAACS,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCnC,IAAtC,CALQ,CALJ,CAFJ;AAgBH;AAED,IAAM0B,UAAU,GAAGU,UAAU,CAACC,MAAX,CAAkB;AACjCV,EAAAA,eAAe,EAAE;AACbW,IAAAA,UAAU,EAAE,QADC;AAEbC,IAAAA,cAAc,EAAE,QAFH;AAGbC,IAAAA,YAAY,EAAE;AAHD,GADgB;AAMjCZ,EAAAA,QAAQ,EAAE;AACNa,IAAAA,KAAK,EAAE,OADD;AAENC,IAAAA,QAAQ,EAAE,EAFJ;AAGNC,IAAAA,UAAU,EAAE;AAHN,GANuB;AAWjCd,EAAAA,IAAI,EAAE;AACFY,IAAAA,KAAK,EAAE;AADL,GAX2B;AAcjCX,EAAAA,gBAAgB,EAAE;AACdQ,IAAAA,UAAU,EAAE,QADE;AAEdC,IAAAA,cAAc,EAAE,QAFF;AAGdK,IAAAA,WAAW,EAAG,OAHA;AAIdC,IAAAA,WAAW,EAAE,CAJC;AAKdC,IAAAA,YAAY,EAAE,EALA;AAMdC,IAAAA,WAAW,EAAE,EANC;AAOdC,IAAAA,aAAa,EAAE,EAPD;AAQdC,IAAAA,UAAU,EAAE,EARE;AASdT,IAAAA,YAAY,EAAE,EATA;AAUdU,IAAAA,YAAY,EAAE;AAVA,GAde;AA0BjCjB,EAAAA,OAAO,EAAC;AACJkB,IAAAA,MAAM,EAAE,GADJ;AAEJC,IAAAA,KAAK,EAAE;AAFH,GA1ByB;AA8BjClB,EAAAA,aAAa,EAAE;AACXO,IAAAA,KAAK,EAAE,OADI;AAEXY,IAAAA,SAAS,EAAE,QAFA;AAGXC,IAAAA,SAAS,EAAE,EAHA;AAIXZ,IAAAA,QAAQ,EAAE,EAJC;AAKXC,IAAAA,UAAU,EAAC;AALA,GA9BkB;AAqCjCZ,EAAAA,SAAS,EAAE;AACPU,IAAAA,KAAK,EAAE,OADA;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPF,IAAAA,YAAY,EAAE,EAHP;AAIPG,IAAAA,UAAU,EAAC;AAJJ,GArCsB;AA2CjCR,EAAAA,WAAW,EAAC;AACRM,IAAAA,KAAK,EAAE,OADC;AAERa,IAAAA,SAAS,EAAE;AAFH;AA3CqB,CAAlB,CAAnB","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, Text, View, Image} from 'react-native';\n\nimport * as Font from 'expo-font';\nimport { setConfigurationAsync } from 'expo/build/AR';\n\n// Font.loadAsync({\n//   'Dosis': {\n//     uri: require('../assets/fonts/Dosis.ttf'),\n//   },\n// })\n\n\nexport default function Home() {\n\n    var date = new Date().getDate(); \n    var m = new Date().getMonth() + 1; \n    var month = m.toString().padStart(2,'0'); //Ajoute 0 pour faire 2 carract√®res\n    var year = new Date().getFullYear(); \n    var heure = new Date().getHours(); \n    var minu = new Date().getMinutes(); \n\n    const [city, setCity] = useState('');\n    const [desc, setDesc] = useState('');\n    const [temp, setTemp] = useState('');\n    const [min, setMin] = useState('');\n    const [max, setMax] = useState('');\n    const [iconHome, setIconHome] = useState('');\n    // const [country, setCountry] = useState('');\n\n    const ville = \"Toulouse\";\n    const apikey = \"008b40e40732624e015ce068cbf7ac72\"\n\nfetch(\n    `https://api.openweathermap.org/data/2.5/weather?q=${ville}&appid=${apikey}&units=metric&lang=fr`\n        )\n        .then((response) => response.json())\n        .then(r => { \n           setCity(r.name) \n           setDesc(r.weather[0].description)\n           setTemp(r.main.temp.toFixed(1))\n           setMin(r.main.temp_min.toFixed(1))\n           setMax(r.main.temp_max.toFixed(1))\n           setIconHome(r.weather[0].icon) \n        //    setCountry(getCountryName(r.sys.country))\n        });\n\n        const img = `../assets/${iconHome}.png`;\n\n    return (\n\n        <View>\n            <View style={stylesHome.containerHeader}>\n                <Text style={stylesHome.bigTitle}>Victor M√©t√©o</Text>\n                <Text style={stylesHome.time}>le {date}/{month}/{year} √† {heure}:{minu}</Text>\n            </View>\n            <View style={stylesHome.containerWeather}>\n                <Text style={stylesHome.cityTitle}>{city}</Text>\n                {/* <Image source={require(`../assets/${iconHome}.png`)} style={stylesHome.imgLogo}></Image> */}\n                <Image source={require(img)} style={stylesHome.imgLogo}></Image>\n    <Text style={stylesHome.bigTitleDegre}>{temp}¬∫C</Text>\n    <Text style={stylesHome.infoWeather}>{desc}</Text>\n            </View>\n        </View>\n    );\n}\n\nconst stylesHome = StyleSheet.create({\n    containerHeader: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 30,\n    },\n    bigTitle: {\n        color: 'white',\n        fontSize: 50,\n        fontFamily: 'Dosis',\n    },\n    time: {\n        color: 'white',\n    },\n    containerWeather: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderColor : 'white',\n        borderWidth: 1,\n        paddingRight: 50,\n        paddingLeft: 50,\n        paddingBottom: 20,\n        paddingTop: 20,\n        marginBottom: 30,\n        borderRadius: 20,\n    },\n    imgLogo:{\n        height: 100,\n        width: 100,\n    },\n    bigTitleDegre: {\n        color: 'white',\n        textAlign :'center',\n        marginTop: 10,\n        fontSize: 70,\n        fontFamily:'Dosis',\n    },\n    cityTitle: {\n        color: 'white',\n        fontSize: 40,\n        marginBottom: 20,\n        fontFamily:'Dosis',\n    },\n    infoWeather:{\n        color: 'white',\n        marginTop: 5,\n    }\n  });\n\n// export default Home;\n\n\n\n    "]},"metadata":{},"sourceType":"module"}