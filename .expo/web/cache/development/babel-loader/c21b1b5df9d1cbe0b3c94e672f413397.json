{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/victorgaubin/Documents/GitHub/WeatherApp/components/Previsions.jsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { setProvidesAudioData } from 'expo/build/AR';\nexport default function Previsions() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      city = _useState2[0],\n      setCity = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      desc = _useState4[0],\n      setDesc = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      temp = _useState6[0],\n      setTemp = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      min = _useState8[0],\n      setMin = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      max = _useState10[0],\n      setMax = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      icon = _useState12[0],\n      setIcon = _useState12[1];\n\n  fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=toulouse&appid=008b40e40732624e015ce068cbf7ac72&units=metric&lang=fr\").then(function (response) {\n    return response.json();\n  }).then(function (r) {\n    setCity(r.name);\n    setDesc(r.weather[0].description);\n    setTemp(r.main.temp.toFixed(1));\n    setMin(r.main.temp_min.toFixed(1));\n    setMax(r.main.temp_max.toFixed(1));\n    setIcon(r.weather[0].icon);\n    setPrev(list.dt_txt);\n  });\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    }\n  }, React.createElement(View, {\n    style: stylesHome.containerPrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/sun.png\"),\n    style: stylesHome.imgPrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: stylesHome.textDegrePrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    }\n  }, \"15:15\"), React.createElement(Text, {\n    style: stylesHome.textDegrePrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    }\n  }, \"25\\xBA\")), React.createElement(View, {\n    style: stylesHome.containerPrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/sun.png\"),\n    style: stylesHome.imgPrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    }\n  }), React.createElement(Text, {\n    style: stylesHome.textDegrePrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    }\n  }, \"17:15\"), React.createElement(Text, {\n    style: stylesHome.textDegrePrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    }\n  }, \"25\\xBA\")), React.createElement(View, {\n    style: stylesHome.containerPrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/sun.png\"),\n    style: stylesHome.imgPrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    }\n  }), React.createElement(Text, {\n    style: stylesHome.textDegrePrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    }\n  }, \"19:15\"), React.createElement(Text, {\n    style: stylesHome.textDegrePrevision,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    }\n  }, \"25\\xBA\")));\n}\nvar stylesHome = StyleSheet.create({\n  containerPrevision: {\n    borderBottomColor: 'white',\n    borderBottomWidth: 1,\n    paddingBottom: 5,\n    width: 265,\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  imgPrevision: {\n    height: 30,\n    width: 30\n  },\n  textDegrePrevision: {\n    color: 'white',\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/Users/victorgaubin/Documents/GitHub/WeatherApp/components/Previsions.jsx"],"names":["React","useState","setProvidesAudioData","Previsions","city","setCity","desc","setDesc","temp","setTemp","min","setMin","max","setMax","icon","setIcon","fetch","then","response","json","r","name","weather","description","main","toFixed","temp_min","temp_max","setPrev","list","dt_txt","stylesHome","containerPrevision","require","imgPrevision","textDegrePrevision","StyleSheet","create","borderBottomColor","borderBottomWidth","paddingBottom","width","marginTop","flexDirection","justifyContent","alignItems","height","color","fontSize"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, Text, View, Image} from 'react-native';\nimport { setProvidesAudioData } from 'expo/build/AR';\n\nexport default function Previsions() {\n\n    const [city, setCity] = useState('');\n    const [desc, setDesc] = useState('');\n    const [temp, setTemp] = useState('');\n    const [min, setMin] = useState('');\n    const [max, setMax] = useState('');\n    const [icon, setIcon] = useState('');\n\n    fetch(\n        `http://api.openweathermap.org/data/2.5/forecast?q=toulouse&appid=008b40e40732624e015ce068cbf7ac72&units=metric&lang=fr`\n            )\n            .then((response) => response.json())\n            .then(r => { \n               setCity(r.name) \n               setDesc(r.weather[0].description)\n               setTemp(r.main.temp.toFixed(1))\n               setMin(r.main.temp_min.toFixed(1))\n               setMax(r.main.temp_max.toFixed(1))\n               setIcon(r.weather[0].icon)\n               setPrev(list.dt_txt)\n            //    setCountry(getCountryName(r.sys.country))\n            });\n\n    return (\n        <View>\n            \n            <View style={stylesHome.containerPrevision}>\n            <Image source={require('../assets/sun.png')} style={stylesHome.imgPrevision}></Image>\n            <Text style={stylesHome.textDegrePrevision}>15:15</Text>\n            <Text style={stylesHome.textDegrePrevision}>25ยบ</Text>\n            </View>\n\n            <View style={stylesHome.containerPrevision}>\n            <Image source={require('../assets/sun.png')} style={stylesHome.imgPrevision}></Image>\n            <Text style={stylesHome.textDegrePrevision}>17:15</Text>\n            <Text style={stylesHome.textDegrePrevision}>25ยบ</Text>\n            </View>\n\n            <View style={stylesHome.containerPrevision}>\n            <Image source={require('../assets/sun.png')} style={stylesHome.imgPrevision}></Image>\n            <Text style={stylesHome.textDegrePrevision}>19:15</Text>\n            <Text style={stylesHome.textDegrePrevision}>25ยบ</Text>\n            </View>\n\n        </View>\n    );\n}\n\nconst stylesHome = StyleSheet.create({\n    containerPrevision: {\n        borderBottomColor : 'white',\n        borderBottomWidth: 1,\n        paddingBottom: 5,\n        width: 265,\n        marginTop: 10,\n        flexDirection:'row',\n        justifyContent:'space-between',\n        alignItems: 'center'\n    },\n    imgPrevision: {\n        height: 30,\n        width: 30,\n    },\n    textDegrePrevision: {\n        color: 'white',\n        fontSize: 20,\n    }\n})\n"]},"metadata":{},"sourceType":"module"}