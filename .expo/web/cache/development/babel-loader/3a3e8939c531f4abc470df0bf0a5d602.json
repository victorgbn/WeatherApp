{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React, {useState} from 'react';\n// import { StyleSheet, Text, View, Image} from 'react-native';\n// import { setProvidesAudioData } from 'expo/build/AR';\n\n// export default function Previsions() {\n\n//     const [city, setCity] = useState('');\n//     const [desc, setDesc] = useState('');\n//     const [temp, setTemp] = useState('');\n//     const [min, setMin] = useState('');\n//     const [max, setMax] = useState('');\n\n//     const [icon, setIcon] = useState('');\n//     const [icon1, setIcon1] = useState('');\n//     const [icon2, setIcon2] = useState('');\n\n//     const [prevDt, setPrevDt] = useState('');\n//     const [prevDt1, setPrevDt1] = useState('');\n//     const [prevDt2, setPrevDt2] = useState('');\n//     const [prevTemp, setPrevTemp] = useState('');\n//     const [prevTemp1, setPrevTemp1] = useState('');\n//     const [prevTemp2, setPrevTemp2] = useState('');\n\n//     const ville = \"Toulouse\";\n//     const apikey = \"008b40e40732624e015ce068cbf7ac72\";\n\n//     fetch(\n//         `http://api.openweathermap.org/data/2.5/forecast?q=${ville}&appid=${apikey}&units=metric&lang=fr`\n//             )\n//             .then((response) => response.json())\n//             .then(r => { \n//             //    setCity(r.name) \n//             //    setDesc(r.weather[0].description)\n//             //    setTemp(r.main.temp.toFixed(1))\n//             //    setMin(r.main.temp_min.toFixed(1))\n//             //    setMax(r.main.temp_max.toFixed(1))\n//             //    setIcon(r.weather[0].icon)\n\n//                setPrevDt(r.list[0].dt_txt)\n//                setPrevDt1(r.list[1].dt_txt)\n//                setPrevDt2(r.list[2].dt_txt)\n//                setPrevTemp(r.list[0].main.temp)\n//                setPrevTemp1(r.list[1].main.temp)\n//                setPrevTemp2(r.list[2].main.temp)\n\n//                setIcon(r.list[0].weather.icon)\n//                setIcon1(r.list[1].weather.icon)\n//                setIcon2(r.list[2].weather.icon)\n\n\n//             //    setCountry(getCountryName(r.sys.country))\n//             });\n\n//     return (\n//         <View>\n//             <View style={stylesHome.containerPrevision}>\n//             <Image source={require(`../assets/${icon}.png`)} style={stylesHome.imgPrevision}></Image>\n//             <Text style={stylesHome.textDegrePrevision}>{prevDt}</Text>\n//             <Text style={stylesHome.textDegrePrevision}>{prevTemp}ºC</Text>\n//             </View>\n\n//             <View style={stylesHome.containerPrevision}>\n//             <Image source={require(`../assets/${icon1}.png`)} style={stylesHome.imgPrevision}></Image>\n//             <Text style={stylesHome.textDegrePrevision}>{prevDt1}</Text>\n//     <Text style={stylesHome.textDegrePrevision}>{prevTemp1}ºC</Text>\n//             </View>\n\n//             <View style={stylesHome.containerPrevision}>\n//             <Image source={require(`../assets/${icon2}.png`)} style={stylesHome.imgPrevision}></Image>\n//             <Text style={stylesHome.textDegrePrevision}>{prevDt2}</Text>\n//             <Text style={stylesHome.textDegrePrevision}>{prevTemp2}ºC</Text>\n//             </View>\n\n//         </View>\n//     );\n// }\n\n// const stylesHome = StyleSheet.create({\n//     containerPrevision: {\n//         borderBottomColor : 'white',\n//         borderBottomWidth: 1,\n//         paddingBottom: 5,\n//         width: 265,\n//         marginTop: 10,\n//         flexDirection:'row',\n//         justifyContent:'space-between',\n//         alignItems: 'center'\n//     },\n//     imgPrevision: {\n//         height: 30,\n//         width: 30,\n//     },\n//     textDegrePrevision: {\n//         color: 'white',\n//         fontSize: 13,\n//     }\n// })\n"]},"metadata":{},"sourceType":"script"}